---
version: "3.7"
name: next-gen-ingest
services:

  broker:
    container_name: broker
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://broker:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://broker:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr broker:33145
      - --advertise-rpc-addr broker:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=error
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.1
    volumes:
      - broker:/var/lib/redpanda/data
    networks:
      - next-gen-ingest
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  console:
    container_name: console
    image: docker.redpanda.com/vectorized/console:v2.2.2
    networks:
      - next-gen-ingest
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment: 
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["broker:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://broker:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://broker:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - 8080:8080
    depends_on:
      - broker

  connect:
    image: docker.redpanda.com/redpandadata/connectors:latest
    hostname: connect
    container_name: connect
    networks:
      - next-gen-ingest
    platform: 'linux/amd64'
    depends_on:
      - broker
    ports:
      - "8083:8083"
    volumes:
      - ${PWD}/plugins/confluentinc-kafka-connect-elasticsearch:/opt/kafka/redpanda-plugins/confluentinc-kafka-connect-elasticsearch
      - ${PWD}/plugins/confluentinc-kafka-connect-datagen:/opt/kafka/redpanda-plugins/confluentinc-kafka-connect-datagen
      - ${PWD}/plugins/confluentinc-kafka-connect-s3:/opt/kafka/redpanda-plugins/confluentinc-kafka-connect-s3
    environment:
      CONNECT_CONFIGURATION: |
          key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
          value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
          group.id=connectors-cluster
          offset.storage.topic=_internal_connectors_offsets
          config.storage.topic=_internal_connectors_configs
          status.storage.topic=_internal_connectors_status
          config.storage.replication.factor=-1
          offset.storage.replication.factor=-1
          status.storage.replication.factor=-1
          offset.flush.interval.ms=1000
          producer.linger.ms=50
          producer.batch.size=131072
      CONNECT_BOOTSTRAP_SERVERS: broker:9092
      CONNECT_GC_LOG_ENABLED: "false"
      CONNECT_HEAP_OPTS: -Xms512M -Xmx512M
      CONNECT_LOG_LEVEL: info
      AWS_ACCESS_KEY_ID: "minio"
      AWS_SECRET_ACCESS_KEY: "minio123"

  elastic-master-01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    hostname: elastic-master-01
    container_name: elastic-master-01
    environment:
      - node.name=elastic-master-01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elastic-master-02,elastic-master-03
      - cluster.initial_master_nodes=elastic-master-01,elastic-master-02,elastic-master-03
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - next-gen-ingest

  elastic-master-02:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    hostname: elastic-master-02
    container_name: elastic-master-02
    environment:
      - node.name=elastic-master-02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elastic-master-01,elastic-master-03
      - cluster.initial_master_nodes=elastic-master-01,elastic-master-02,elastic-master-03
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - next-gen-ingest

  elastic-master-03:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    hostname: elastic-master-03
    container_name: elastic-master-03
    environment:
      - node.name=elastic-master-03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elastic-master-01,elastic-master-02
      - cluster.initial_master_nodes=elastic-master-01,elastic-master-02,elastic-master-03
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - next-gen-ingest

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: kibana
    environment:
      SERVER_NAME: 127.0.0.1
      ELASTICSEARCH_HOSTS: '["http://elastic-master-01:9200","http://elastic-master-02:9200","http://elastic-master-03:9200","http://es04:9200"]'
      # XPACK_GRAPH_ENABLED: false
      # XPACK_ML_ENABLED: false
      # XPACK_REPORTING_ENABLED: false
      # XPACK_SECURITY_ENABLED: false
      # XPACK_WATCHER_ENABLED: false
    ports:
      - "5601:5601"
    networks:
      - next-gen-ingest
    depends_on:
      - elastic-master-01
      - elastic-master-02
      - elastic-master-03
    restart: "unless-stopped"

  s3:
    container_name: s3
    image: quay.io/minio/minio:RELEASE.2023-03-20T20-16-18Z
    command: server --console-address ":9001" /data/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - s3:/data
    networks:
      - next-gen-ingest

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  broker: null
  s3:
    driver: local

networks:
  next-gen-ingest:
    driver: bridge
